<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto'>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
  const createChart = (Title, lecreo, nolecreo, name) => {
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

        var data = google.visualization.arrayToDataTable([
          ['¿y?', 'Cantidad de personas'],
          ['Le creo',     lecreo],
          ['No le creo',      nolecreo],
        ]);

        var options = {
          title: Title
        };

        var chart = new google.visualization.PieChart(document.getElementById(name));

        chart.draw(data, options);
      }
    };
</script>








<body class="w3-light-grey">

<!-- Page Container -->
<div class="w3-content w3-margin-top margin-top" style="max-width:1400px;">

  <!-- The Grid -->
  <div class="w3-row">

    <!-- Left Column -->
    <div class="w3-third w3-padding w3-animate-left">

      <div class="w3-white w3-text-grey w3-card-4">
        <div class="w3-display-container">
          <img id="candidate-image" src="<%= candidate.image %>" style="width:100%" alt="Avatar">
          <div class="w3-display-bottomleft w3-container w3-text-black">
            <h2 class = "w3-text-white" ><%= candidate.name %></h2>
          </div>
        </div>
        <div class="w3-container">
          <br>
          <p><%= candidate.slogan %><p>
        </div>
      </div><br>

    <!-- End Left Column -->
    </div>

    <!-- Right Column -->
    <div class="w3-twothird w3-animate-right">

      <div class="w3-container w3-card-2 w3-white w3-margin-bottom">
        <h2 class="w3-text-grey w3-padding-16"><i class="fa fa-suitcase fa-fw w3-margin-right w3-xxlarge w3-text-teal"></i>Biografía</h2>
        <div class="w3-container">
          <h5 class="w3-opacity"><b>Biografía</b></h5>
          <h6 class="w3-text-teal"><i class="fa fa-calendar fa-fw w3-margin-right"></i>Nació el <%= candidate.birthday %></h6>
          <p><%= candidate.bio%></p>
          <hr>
        </div>
        <div class="w3-container">
          <h5 class="w3-opacity"><b>Partido político</b></h5>
          <p class="w3-text-center"><img src="<%= candidate.partyImage %>" style="width:10%" alt="Avatar" class="w3-margin-right"><%= candidate.political_party%></p>
          <hr>
        </div>
        <div class="w3-container">
          <h5 class="w3-opacity"><b>Graphic Designer / designsomething.com</b></h5>
          <h6 class="w3-text-teal"><i class="fa fa-calendar fa-fw w3-margin-right"></i>Jun 2010 - Mar 2012</h6>
          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. </p><br>
        </div>
      </div>

      <div class="w3-container w3-card-2 w3-white">
        <h2 class="w3-text-grey w3-padding-16"><i class="fa fa-certificate fa-fw w3-margin-right w3-xxlarge w3-text-teal"></i>Propuestas</h2>
        <% proposals.forEach((proposal) => { %>
            <div class="w3-container">
                <h3 class="w3-opacity"><b><li><a href="<%= buildProposalPath(proposal) %>"><%= proposal.title %>></a></li></b></h3>
                <h6 class="w3-text-teal"><i class="fa fa-calendar fa-fw w3-margin-right"></i><%= proposal.date %></h6>
                <p><%= proposal.description %></p>
                <center>
                <script>createChart("Nombre de la propuesta", 10345, 12397, <%-proposal.id%>)</script>
                <div id="<%=proposal.id %>" style="width: 500px; height: 350px;"></div>
                </center>
                <hr>
            </div>
          <% }) %>

      </div>

    <!-- End Right Column -->
    </div>

  <!-- End Grid -->
  </div>

  <!-- End Page Container -->
</div>

</body>

<script type="text/javascript">
    var w = 300,                        //width
    h = 300,                            //height
    r = 100,                            //radius
    color = d3.scale.category20c();     //builtin range of colors
    data = [{"label":"one", "value":20},
            {"label":"two", "value":50},
            {"label":"three", "value":30}];

    var vis = d3.select("body")
        .append("svg:svg")              //create the SVG element inside the <body>
        .data([data])                   //associate our data with the document
            .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
            .attr("height", h)
        .append("svg:g")                //make a group to hold our pie chart
            .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
        .outerRadius(r);
    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
        .value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array
    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
        .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties)
        .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
            .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                .attr("class", "slice");    //allow us to style things in the slices (like text)
        arcs.append("svg:path")
                .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function
        arcs.append("svg:text")                                     //add a label to each slice
                .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                //we have to make sure to set these before calling arc.centroid
                d.innerRadius = 0;
                d.outerRadius = r;
                return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
            })
            .attr("text-anchor", "middle")                          //center the text on it's origin
            .text(function(d, i) { return data[i].label; });        //get the label from our original data array

</script>
